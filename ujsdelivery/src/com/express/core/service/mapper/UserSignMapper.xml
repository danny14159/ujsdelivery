<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.express.core.service.UserSignService">
  <insert id="insert" parameterType="UserSign">
   insert into tb_user_sign(userid,express,remark,phone,sign_name,sign_time,state,address,name,addr_region,addr_building,is_free,isFirst,send_time) 
   values(#{userid},#{express},#{remark},#{phone},#{sign_name},#{sign_time},#{state},#{address},#{name},#{addr_region},#{addr_building},#{is_free},#{isFirst},#{send_time});
  </insert>
  <delete id="delete" parameterType="hashmap">
   update tb_user_sign set deleted='Y'
   <where>
    userid=#{userid}
       </where>
  </delete>
  <update id="update" parameterType="hashmap">
   update tb_user_sign
   <set>
         <if test="state!=null">state=#{ state },</if>
         <if test="isFirst!=null">isFirst=#{ isFirst },</if>
         <if test="comment!=null">comment=#{ comment },</if>
         <if test="sys_remark!=null">sys_remark=#{ sys_remark },</if>
       </set>
   <where>
    id=#{id}
     <if test="express!=null">and express=#{express}</if>
       </where>
  </update>
  <select id="list" resultType="UserSign" parameterType="hashmap">
   select * from tb_user_sign
   <where>
   <if test="from_sign_time!=null">and sign_time>=#{from_sign_time}</if>
   <if test="to_sign_time!=null">and sign_time&lt;#{to_sign_time}</if>
   <if test="state!=null">and state=#{state}</if>
   <if test="userid!=null">and userid=#{userid}</if>
   <if test="express!=null">and express=#{express}</if>
   <if test="name!=null">and (name like CONCAT(CONCAT('%', #{name}),'%') or sign_name like CONCAT(CONCAT('%', #{name}),'%') or id=#{name} or phone=#{name})</if><!-- 相似查找寄件人 -->
	<if test="is_free!=null">and (is_free='Y' or isFirst='Y')</if>
    <if test="is_not_free!=null">and ((is_free is null or is_free!='Y') and (isFirst is null or isFirst!='Y'))</if>
   <if test="isFirst!=null">and isFirst=#{isFirst}</if>
   <if test="addr_region!=null">and addr_region=#{addr_region}</if>
   <if test="addr_building!=null">and addr_building=#{addr_building}</if>
   <if test="send_time!=null">and send_time=#{send_time}</if>
   <if test="sys_remark!=null">and sys_remark is not null</if>
       </where>
  order by id desc
  <if test="offset!=null and rows!=null">
	  limit #{offset},#{rows}
  </if>
  </select>
  <select id="listByPage" resultType="UserSign" parameterType="hashmap">
   select * from tb_user_sign
   <where>
       </where>
   limit #{offset},#{rows}
  </select>
  <select id="load" resultType="UserSign" parameterType="hashmap">
   select * from tb_user_sign
   <where>
   id=#{id}
       </where>
   limit 0,1
  </select>
  <select id="count" resultType="int" parameterType="hashmap">
   select count(1) from tb_user_sign
   <where>
   <if test="from_sign_time!=null">and sign_time>=#{from_sign_time}</if>
   <if test="to_sign_time!=null">and sign_time&lt;#{to_sign_time}</if>
   <if test="state!=null">and state=#{state}</if>
   <if test="userid!=null">and userid=#{userid}</if>
   <if test="express!=null">and express=#{express}</if>
   <if test="name!=null">and (name like CONCAT(CONCAT('%', #{name}),'%') or sign_name like CONCAT(CONCAT('%', #{name}),'%') or id=#{name} or phone=#{name})</if><!-- 相似查找寄件人 -->
	<if test="is_free!=null">and (is_free='Y' or isFirst='Y')</if>
    <if test="is_not_free!=null">and ((is_free is null or is_free!='Y') and (isFirst is null or isFirst!='Y'))</if>
   <if test="isFirst!=null">and isFirst=#{isFirst}</if>
   <if test="addr_region!=null">and addr_region=#{addr_region}</if>
   <if test="addr_building!=null">and addr_building=#{addr_building}</if>
   <if test="send_time!=null">and send_time=#{send_time}</if>
   <if test="inState!=null"> and state not in ('C','D')</if>
   <if test="sys_remark!=null">and sys_remark is not null</if>
       </where>
  </select>
  <select id="getEarliestSubmitedOrder" parameterType="hashmap" resultType="UserSign">
  	select * from tb_user_sign t1 where t1.state='S' and userid=#{userid} order by sign_time asc limit 0,1
  </select>
  
  <select id="searchForDuplicate" resultType="UserSign">
SELECT
	*
FROM
	tb_user_sign
WHERE
	state = 'S'
AND remark IN (
	SELECT
		remark
	FROM
		tb_user_sign
	WHERE
		state = 'S'
	GROUP BY
		remark,
		userid
	HAVING
		count(*) > 1
)
AND userid IN (
	SELECT
		userid
	FROM
		tb_user_sign
	WHERE
		state = 'S'
	GROUP BY
		remark,
		userid
	HAVING
		count(*) > 1
)
ORDER BY
	remark
  </select>
  <select id="countSearchForDuplicate" resultType="int" parameterType="string">
SELECT
	count(*)
FROM
	tb_user_sign
WHERE
	state = 'S'
AND remark IN (
	SELECT
		remark
	FROM
		tb_user_sign
	WHERE
		state = 'S'
	GROUP BY
		remark,
		userid
	HAVING
		count(*) > 1
)
AND userid IN (
	SELECT
		userid
	FROM
		tb_user_sign
	WHERE
		state = 'S'
	GROUP BY
		remark,
		userid
	HAVING
		count(*) > 1
)
ORDER BY
	remark
  </select>
  <select id="exportComment" resultType="CommentRecord" parameterType="string">
  	select * from tb_user_sign where `comment` is not null 
  	order by sign_time desc limit 0,5000 
  </select>
  
  <select id="countByHour" parameterType="int" resultType="int">
  select count(1) from tb_user_sign where hour(sign_time) = #{hour}
  </select>
  
  <select id="todayFreeOrders" resultType="int" parameterType="string">
  	SELECT
		count(1)
	FROM
		tb_user_sign ta
	WHERE
		date (ta.sign_time) = curdate()
	AND (
		ta.is_free = 'Y'
		OR ta.isFirst = 'Y'
	)
  </select>
  
  <select id="todaySignNum" resultType="int" parameterType="string">
  	SELECT
		count(1)
	FROM
		tb_user t
	WHERE
		date (t.last_sign) = curdate()
  </select>
  <select id="todayFinishedNum" resultType="int" parameterType="string">
  	SELECT
		count(1)
	FROM
		tb_user_sign t
	WHERE
		date (t.sign_time) = curdate()
	and t.state='F'
  </select>
  
  <select id="selectYesterdayMaxId" resultType="Integer">
	SELECT
		max(id)
	FROM
		tb_user_sign
	WHERE
		date(sign_time) != curdate()
  </select>
  <select id="countUserSign" parameterType="string" resultType="int">
  	select count(1) from tb_user_sign 
  	where phone = #{phone} and date (sign_time) = curdate()
  </select>
 </mapper>